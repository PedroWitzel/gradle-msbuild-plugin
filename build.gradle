import de.undercouch.gradle.tasks.download.Download

plugins {
    id 'com.gradle.plugin-publish' version '1.+'
    id 'com.ullink.msbuild' version '3.+'
    id 'com.ullink.nuget' version '2.+'
    id 'com.ullink.nunit' version '2.+'
    id 'de.undercouch.download' version '5.+'
}

group = 'com.ullink.gradle'

apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'maven-publish'

description 'Gradle plugin for MSBuild project build.'

ext.dotnetPath = file('src/main/dotnet')

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.codehaus.groovy:groovy:3.0.17'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testCompileOnly 'junit:junit:4.13.2'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.10.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.0'

    implementation 'net.java.dev.jna:jna-platform:5.13.0'
    implementation 'com.google.guava:guava:32.1.2-jre'
}

nugetRestore {
    solutionFile = file('ProjectFileParser.sln')
}

tasks.named('msbuild').configure {
    dependsOn nugetRestore
}
msbuild {
    solutionFile = file('ProjectFileParser.sln')
    configuration = 'Release'
    projectName = 'ProjectFileParser'
}

nunit {
    testAssemblies = [msbuild.projects['ProjectFileParser_Tests'].properties.TargetPath]
}

tasks.register('generateZip', Zip) {
    dependsOn nunit
    from(msbuild.mainProject.properties.TargetDir) {
        include '*.exe'
        include '**/*.dll'
        include '*.config'
    }
    into '/'
    archiveFileName = 'ProjectFileParser.zip'
}

tasks.register('downloadVsWhere', Download) {
    src 'https://github.com/microsoft/vswhere/releases/download/3.1.7/vswhere.exe'
    dest "$temporaryDir/vswhere.exe"
}


jar {
    from(generateZip.outputs.files) {
        into('META-INF')
    }
}

sourceSets {
    main {
        resources {
            srcDirs = [downloadVsWhere.temporaryDir]
        }
    }
}

tasks.named('test', Test) {
    useJUnitPlatform()
}

gradlePlugin {
    website = 'https://github.com/Itiviti/gradle-msbuild-plugin'
    vcsUrl = 'https://github.com/Itiviti/gradle-msbuild-plugin'
    plugins {
        msbuildPlugin {
            id = 'com.ullink.msbuild'
            description = project.description
            displayName = 'Gradle MSBuild Plugin'
            implementationClass = 'com.ullink.MsbuildPlugin'
            tags.set(['msbuild', 'c#', '.net'])
        }
    }
}

tasks.named('processResources').configure { dependsOn downloadVsWhere }

// Need to declare this task in advance because it isn't on this project's configuration phase
tasks.register('sourcesJar', Jar) { dependsOn downloadVsWhere }
